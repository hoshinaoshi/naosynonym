package main

import (
  "fmt"
  "github.com/aws/aws-sdk-go/aws"
  "github.com/aws/aws-sdk-go/aws/session"
  "github.com/aws/aws-sdk-go/service/dynamodb"
  "github.com/aws/aws-lambda-go/lambda"
)

type Response struct {
  Message string `json:"message"`
  Ok      bool   `json:"ok"`
}

func handler() (Response, error) {
  // session
  sess, err := session.NewSession()
  if err != nil {
    panic(err)
  }

  svc := dynamodb.New(sess)

  queryParams := &dynamodb.QueryInput{
    TableName: aws.String("test"),
    KeyConditionExpression: aws.String("#Name=:name"),
    ExpressionAttributeNames: map[string]*string{
      "#Name": aws.String("name"),
    },
    ExpressionAttributeValues: map[string]*dynamodb.AttributeValue{
      ":Name": {
        S: aws.String("1"),
      },
    },
  }

  queryItem, queryErr := svc.Query(queryParams)
  if queryErr != nil {
    panic(queryErr)
  }
  fmt.Println(queryItem)

  return Response{
    Message: fmt.Sprintln(queryItem),
    Ok:      true,
  }, nil
}

func main() {
  lambda.Start(handler)
}
